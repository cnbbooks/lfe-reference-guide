MODULE

	lfe_comp

MODULE SUMMARY

	Lisp Flavoured Erlang (LFE) compiler

DESCRIPTION

	This module provides an interface to the standard LFE
	compiler. It can generate either a new file which contains the
	object code, or return a binary which can be loaded directly.

EXPORTS

file(FileName) -> CompRet
file(FileName, Options) -> CompRet

	where
	  CompRet = ModRet | BinRet | ErrRet
	  ModRet = {ok,ModuleName} | {ok,ModuleName,Warnings}
	  BinRet = {ok,ModuleName,Binary} | {ok,ModuleName,Binary,Warnings}
	  ErrRet = error | {error,Errors,Warnings}

	Compile an LFE file, either writing the generated module to a
	file or returning it as a binary. The generated module is
	ready to be loaded into Erlang.

	The currently recognised options are:

	binary
		Return the binary of the module and do not save it in
		a file.

	dcore
		Print out the Core Erlang forms generated by the LFE
		compiler. Mainly useful for debugging and interest.

	{outdir,Dir}
		Save the generated files in directory Dir instead of
		the current directory.

	report
		Do not return the errors and warnings but print them
		out insted. This is the default.

	return
		Return the errors and warnings instead of printing
		them.

	to_core
		Print out the Core Erlang forms after the LFE forms
		have been optimised by the Erlang compiler. Mainly
		useful for debugging and interest.

	Both WarningList and ErrorList have the following format:

	[ErrorInfo]

	ErrorInfo is described below. The file name has been included
	here as the compiler uses the Erlang pre-processor epp, which
	allows the code to be included in other files. For this
	reason, it is important to know to which file an error or
	warning line number refers.

forms(Forms) -> CompRet
forms(Forms, Options) -> CompRet

	where
	  CompRet = BinRet | ErrRet
	  BinRet = {ok,ModuleName,Binary} | {ok,ModuleName,Binary,Warnings}
	  ErrRet = error | {error,Errors,Warnings}

	Compile the forms as an LFE module returning a binary. This
	function takes the same options as lfe_comp:file/1/2. When
	generating errors and warnings the "linenumber" is the index
	of the form in which the error occured.

format_error(Error) -> Chars

	Uses an ErrorDescriptor and returns a deep list of characters
	which describes the error. This function is usually called
	implicitly when an ErrorInfo structure is processed. See
	below.

Error Information

	The ErrorInfo mentioned above is the standard ErrorInfo
	structure which is returned from all IO modules. It has the
	following format:

	{ErrorLine, Module, ErrorDescriptor}
    
	A string describing the error is obtained with the following call:

	apply(Module, format_error, ErrorDescriptor)
